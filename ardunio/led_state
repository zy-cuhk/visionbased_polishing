#include <ros.h>
#include <std_msgs/String.h>
#include <std_msgs/Empty.h>
#include <std_msgs/UInt16.h>
ros::NodeHandle  nh;


void messageCb( const std_msgs::Empty& toggle_msg){
  digitalWrite(13, HIGH-digitalRead(13));
}

ros::Subscriber<std_msgs::Empty> sub("toggle_led", messageCb );



std_msgs::UInt16 sta_msg;
ros::Publisher chatter_Int("led_state", &sta_msg);


void setup()
{
  pinMode(13, OUTPUT);
  nh.initNode();0
  nh.advertise(chatter_Int);
  nh.subscribe(sub);
}

void loop()
{
  sta_msg.data=digitalRead(13);
  chatter_Int.publish( &sta_msg );
  nh.spinOnce();
  delay(500);
}